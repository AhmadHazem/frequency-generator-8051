C51 COMPILER V9.60.7.0   TIMER1                                                            04/20/2023 21:27:29 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER1
OBJECT MODULE PLACED IN .\Objects\timer1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE timer1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ti
                    -mer1.lst) TABS(2) OBJECT(.\Objects\timer1.obj)

line level    source

   1          #include "timer1.h"
   2          #include "quad_7segment.h"
   3          
   4          unsigned int num;
   5          unsigned long int_loop;
   6          unsigned int ext_loop;
   7          unsigned int act_loop;
   8          
   9          sbit mybit = P3 ^ 7;
  10          
  11          void init_timer1()
  12          {
  13   1        // Set the timer mode to 16-bit mode
  14   1        TMOD |= 0x10;
  15   1      
  16   1        // Enable Timer 1 interrupt
  17   1        ET1 = 1;
  18   1      
  19   1        // Enable interrupts globally
  20   1        EA = 1;
  21   1      }
  22          
  23          void start_timer1()
  24          {
  25   1        // Set the timer reload value
  26   1        TH1 = (65536 - int_loop) / 256;
  27   1        TL1 = (65536 - int_loop) % 256;
  28   1      
  29   1        // Start Timer 1
  30   1        TR1 = 1;
  31   1      }
  32          
  33          void stop_timer1()  
  34          {
  35   1        // Reset the Timer 1 interrupt flag
  36   1        TF1 = 0;
  37   1      
  38   1        // Stop Timer 0
  39   1        TR1 = 0;
  40   1      }
  41          
  42          
  43          
  44          void delay_timer1(void) interrupt 3
  45          {
  46   1        // Toggle bit to produce square wave
  47   1        if (--act_loop == 0)
  48   1        {
  49   2          mybit = ~mybit;
  50   2          // Reset the external loop index
  51   2          act_loop = ext_loop;
  52   2        }
  53   1      
  54   1        stop_timer1();
C51 COMPILER V9.60.7.0   TIMER1                                                            04/20/2023 21:27:29 PAGE 2   

  55   1      
  56   1        start_timer1();
  57   1      }
  58          
  59          void set_sq_wave(unsigned int freq)
  60          {
  61   1        if (num != freq)
  62   1        {
  63   2          // Enable timer1
  64   2          init_timer1();
  65   2          
  66   2          // Set the frequency
  67   2          num = freq;
  68   2          
  69   2          // Calculating time needed for each high/low portion
  70   2          int_loop = 460800 / (num * 1.0);
  71   2          ext_loop = 1;
  72   2      
  73   2          // Consider the case where the loop count is greater than 65536
  74   2          if (int_loop > 65536)
  75   2          {
  76   3            ext_loop = 10;
  77   3            int_loop = int_loop / 10;
  78   3          }
  79   2          
  80   2          // Set the external loop index
  81   2          act_loop = ext_loop;
  82   2      
  83   2          // Start generating square wave
  84   2          start_timer1();
  85   2        }
  86   1        else if (freq == 0)
  87   1        {
  88   2          // Stop generating square wave when freq=0
  89   2          mybit = 0;
  90   2          stop_timer1();
  91   2        }
  92   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    275    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
