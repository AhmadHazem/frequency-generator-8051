C51 COMPILER V9.60.7.0   TIMER1                                                            04/25/2023 13:53:54 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER1
OBJECT MODULE PLACED IN .\Objects\timer1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE timer1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ti
                    -mer1.lst) TABS(2) OBJECT(.\Objects\timer1.obj)

line level    source

   1          #include "timer1.h"
   2          #include "quad_7segment.h"
   3          
   4          unsigned int num;
   5          
   6          unsigned long int_loop;
   7          
   8          unsigned int ext_loop;
   9          unsigned int act_loop;
  10          
  11          unsigned int TH;
  12          unsigned int TL;
  13          
  14          sbit mybit = P3 ^ 7;
  15          
  16          void init_timer1()
  17          {
  18   1        // Set the timer mode to 16-bit mode
  19   1        TMOD |= 0x10;
  20   1      
  21   1        // Enable Timer 1 interrupt
  22   1        ET1 = 1;
  23   1      
  24   1        // Enable interrupts globally
  25   1        EA = 1;
  26   1      }
  27          
  28          void start_timer1()
  29          {
  30   1        // Set the timer reload value
  31   1        TH1 = TH;
  32   1        TL1 = TL;
  33   1      
  34   1        // Start Timer 1
  35   1        TR1 = 1;
  36   1      }
  37          
  38          void stop_timer1()  
  39          {
  40   1        // Reset the Timer 1 interrupt flag
  41   1        TF1 = 0;
  42   1      
  43   1        // Stop Timer 0
  44   1        TR1 = 0;
  45   1      }
  46          
  47          void delay_timer1(void) interrupt 3
  48          {
  49   1        // Toggle bit to produce square wave
  50   1        if (--act_loop == 0)
  51   1        {
  52   2          mybit = ~mybit;
  53   2          // Reset the external loop index
  54   2          act_loop = ext_loop;
C51 COMPILER V9.60.7.0   TIMER1                                                            04/25/2023 13:53:54 PAGE 2   

  55   2        }
  56   1        
  57   1        stop_timer1();
  58   1        start_timer1();
  59   1      }
  60          
  61          // Setting frequency for the first time
  62          void set_sq_wave(unsigned int freq)
  63          {
  64   1        if (num != freq)
  65   1        {
  66   2          // Enable timer1
  67   2          init_timer1();
  68   2          
  69   2          // Set the frequency
  70   2          num = freq;
  71   2          
  72   2          // Calculating time needed for each high/low portion
  73   2          int_loop = 460800 / (num * 1.0) - 30;
  74   2          ext_loop = 1;
  75   2      
  76   2          // Consider the case where the loop count is greater than 65536
  77   2          if (int_loop > 65536)
  78   2          {
  79   3            ext_loop = 10;
  80   3            int_loop = int_loop / 10;
  81   3          }
  82   2          
  83   2          // Set TH and TL
  84   2          TH = (65536 - int_loop) / 256;
  85   2          TL = (65536 - int_loop) % 256;
  86   2          
  87   2          // Set the external loop index
  88   2          act_loop = ext_loop;
  89   2      
  90   2          // Start generating square wave
  91   2          start_timer1();
  92   2        }
  93   1        else if (freq == 0)
  94   1        {
  95   2          // Stop generating square wave when freq=0
  96   2          mybit = 0;
  97   2          stop_timer1();
  98   2        }
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    261    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
